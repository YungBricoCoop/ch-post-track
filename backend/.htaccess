SetOutputFilter DEFLATE
AddOutputFilterByType DEFLATE "application/atom+xml" "application/javascript" "application/json" "application/ld+json" "application/manifest+json" "application/rdf+xml" "application/rss+xml" "application/schema+json" "application/vnd.geo+json" "application/vnd.ms-fontobject" "application/x-font-ttf" "application/x-javascript" "application/x-web-app-manifest+json" "application/xhtml+xml" "application/xml" "font/eot" "font/opentype" "image/bmp" "image/svg+xml" "image/vnd.microsoft.icon" "image/x-icon" "text/cache-manifest" "text/css" "text/html" "text/javascript" "text/plain" "text/vcard" "text/vnd.rim.location.xloc" "text/vtt" "text/x-component" "text/x-cross-domain-policy" "text/xml"

# SECTION BEGIN GIT PROTECTION
RedirectMatch 404 /\.git
# SECTION END GIT PROTECTION

RewriteEngine On
RewriteCond %{SERVER_PORT} 80
RewriteRule ^(.*)$ https://elwan.ch/post/$1/$ [R,L]

<IfModule mod_rewrite.c>
  RewriteBase /
  #  Si la requêtes est "index.html", garde le meme URL [L] => Cela signifie dans la plupart des situations que si la règle s'applique, aucune autre règle ne sera traitée.
  RewriteRule ^index\.html$ - [L]
  # Si les conditions ci-dessous sont remplis, alors on redirige vers le fichier index.html 
  # est un fichier régulier. Traite chaîne_de_test comme un chemin et vérifie s'il existe ou pas, et s'il s'agit d'un fichier régulier.
  RewriteCond %{REQUEST_FILENAME} !-f
  # est un répertoire. Traite chaîne_de_test comme un chemin et vérifie s'il existe ou pas, et s'il s'agit d'un répertoire.
  RewriteCond %{REQUEST_FILENAME} !-d
  # est un lien symbolique. Considère la chaîne_de_test comme un chemin et vérifie son existence et si elle est un lien symbolique. On peut aussi utiliser la convention bash -L ou -h lorsqu'il y a risque de confusion avec les tests -lt ou -le.
  RewriteCond %{REQUEST_FILENAME} !-l
  RewriteRule ^ index.html [L]

</IfModule>